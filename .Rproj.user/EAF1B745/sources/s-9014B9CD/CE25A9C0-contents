
****** SAS CODE FOR REPLICATION ANALYSIS: VITAMIN D AND BIRTH DEFECTS PROJECT*************;
* Created by: 		Nedghie Adrien/Olivia Orta
* Created:          September 2, 2020
* Date modified: 	
* Purpose: 			SAS code for replication of analytic sample for vitamin D and birth defects project
******************************************************************************************;
*************************************************************;
*              CODE ADAPTED FROM OLIVIA'S ANALYSIS           *
*************************************************************;

data rep.merged;
	set rep.descriptive;

/*Code from Olivia*/
	cmonthb=month(C_concep_std);

	cyearb=year(C_concep_std);
		*to account for the ONE missing woman with an estimated conception date of 2/2000; 

	cmonth=.;
		if cmonthb>. then cmonth=cmonthb;
		if cmonthb=. then cmonth=2;

	cyear=.;
		if cyearb>. then cyear=cyearb;
		if cyearb=. then cyear=2000;

run;


*new formats for age, education, race, parity, smoking;
Proc format;
	value newage
	1 = " <20 years old"
	2 = "20 - 24 years old"
	3 = "25 - 29 years old"
	4 = "30 - 34 years old"
	5 = "35 - 39 years old"
	6 = "40+ years old";
	value newedu
	1 = "12 or fewer years"
	2 = "12+ years";
	value newrace
    1 = "White, non Hispanic"
	2 = "Black, non Hispanic"
	3 = "Hispanic"
	4 = "Other";
	value parity
	0 = "First birth"
	1 = "2+";
	value newyesno
	1 = "Yes"
	2 = "No"
	8 = "DK";
run;

data rep.final;
	set rep.merged;

*************Exclusions*******************************;
	*recode age to 4 age categories;
	if c_agecat in (888,999) then newagecat=.; *missing age;
	if c_agecat in (1,2) then newagecat=1; *less than 20 years old;
	if c_agecat eq 3 then newagecat=2; * 20-24 years old;
	if c_agecat eq 4 then newagecat=3; *25-29 years old;
	if c_agecat eq 5 then newagecat=4; *30-34 years old;
	if c_agecat eq 6 then newagecat=5;  *35- 39 years old;
	if c_agecat in (7,8,9)then newagecat=6; *40+;
format newagecat newage.;
label newagecat="Maternal Age Categories";
	*new indicator variable for race;
	if c_mrace eq 999 then newrace=.; *Missing;
	if c_mrace eq 11 then newrace=1;  *White;
	if c_mrace eq 12 then newrace=2;  *Black;
	if c_mrace eq 13 then newrace=3;  *Hispanic;
	if c_mrace in (14,15,16) then newrace=4;  *Other;
format newrace newrace.;
label newrace ="Maternal Race/Ethnicity";

 *recode maternal education;
	newedu = c_meduc2; 
	*Using the dichotomized version of education variable;
	if c_meduc in(999,.) then newedu=.;
format newedu newedu.;
label newedu= "Maternal Educational Attainment";

*Recode number of pregnancies - is this gravidity or parity?;
	if numpg eq 0 then parity=0;
	else if numpg in (1:15) then parity=1;
	else parity =.;
format parity parity.;

*Recode smoking; 
smoke=c_smoke;
if c_smoke=999 then smoke=.;

*Recode alcohol;
alcohol=c_alcohol;
if c_alcohol=999 then alcohol=.;

data rep.final2;
set rep.final1;

***********************************************
	Vitamin d from sunlight (UV)
***********************************************;

	UV_index_cat=.; 
		if UV ge 0 and UV lt 3 then UV_index_cat=0; *Low;
		if UV ge 3 and UV lt 6 then UV_index_cat=1; *Moderate;
		if UV ge 6  then UV_index_cat=2; * High (includes very high and extreme);	

	***********************************************
	Vitamin d from pre-pregnancy diet
	***********************************************;

	logvd=log(vitd);
	logkcal=log(enerc_kcal);

/**Distribution of vitamin D among controls; *vitamin D is reported in IU?
Distribution for tertiles is obtained after removing missing/implausible FFQ values. 
Run this to obtain tertiles and categorize dietary vitamin D after last step

	proc univariate data=rep.final4 noprint;
   		var vitD;
		where case=0;
		output out=percent pctlpts=33.3 66.7 pctlpre=P;
	run;

	proc print data=percent;
		run;
	
	Vit_D_tert=.;
		if 0 <= vitd < 65.2120 then Vit_D_tert=0;
		if 65.2120 <= vitd < 107.554 then Vit_D_tert=1;
		if vitd >= 107.554 then Vit_D_tert=2;
		if vitd=. then Vit_D_tert=.;

	High_VitD=.; *High Vitamin D using tertiles;
		if Vit_D_tert=2 then High_VitD=1;
		else if Vit_D_tert in (0,1) then High_VitD=0;
		else High_VitD=.;*/


	***********************************************
	Vitamin d from supplementation (b3-p2): prenatal, multivitamin and singlevd <-- very few
	***FROM CDC Vitamins dataset;
	***********************************************;

	anypvb3p2=.;
		if GPpd1=1 or GPpd2=1 or GPpd3=1 then anypvb3p2=1;
		if GPpd1=0 and GPpd2=0 and GPpd3=0 then anypvb3p2=0;

	anymvb3p2=.;
		if GMVpd1=1 or GMVpd2=1 or GMVpd3=1 then anymvb3p2=1;
		if GMVpd1=0 and GMVpd2=0 and GMVpd3=0 then anymvb3p2=0;

	anypmv=.;
		if anypvb3p2=0 and anymvb3p2=0 then anypmv=0;
		if anypvb3p2=0 and anymvb3p2=1 then anypmv=1;
		if anypvb3p2=0 and anymvb3p2=. then anypmv=0;

		if anypvb3p2=1 and anymvb3p2=0 then anypmv=1;
		if anypvb3p2=1 and anymvb3p2=1 then anypmv=1;
		if anypvb3p2=1 and anymvb3p2=. then anypmv=1;

		if anypvb3p2=. and anymvb3p2=0 then anypmv=0;
		if anypvb3p2=. and anymvb3p2=1 then anypmv=1;
		if anypvb3p2=. and anymvb3p2=. then anypmv=.;

	singlevd=.;
		if vd_ExpB3P2=1 then singlevd=1;
		if vd_ExpB3P2=2 then singlevd=0;
		if vd_ExpB3P2=8 then singlevd=.;
		if vd_ExpB3P2=0 then singlevd=.;

	*now includes any mv, prental, or single vitamin d from b3-p2; 
	anysupp=.;
		if anypmv=0 and singlevd=0 then anysupp=0;
		if anypmv=0 and singlevd=1 then anysupp=1;
		if anypmv=0 and singlevd=. then anysupp=0;

		if anypmv=1 and singlevd=0 then anysupp=1;
		if anypmv=1 and singlevd=1 then anysupp=1;
		if anypmv=1 and singlevd=. then anysupp=1;

		if anypmv=. and singlevd=0 then anysupp=0;
		if anypmv=. and singlevd=1 then anysupp=1;
		if anypmv=. and singlevd=. then anysupp=.;

	vdsuppnum=.;
		if anypmv=0 and singlevd=0 then vdsuppnum=0;
		if anypmv=1 and singlevd=0 then vdsuppnum=1;
		if anypmv=0 and singlevd=1 then vdsuppnum=1;
		if anypmv=1 and singlevd=1 then vdsuppnum=2;

	vdsuppnum2=.;
		if anypmv=0 and singlevd=0 then vdsuppnum2=0;
		if anypmv=1 and singlevd=0 then vdsuppnum2=1;
		if anypmv=0 and singlevd=1 then vdsuppnum2=2;
		if anypmv=1 and singlevd=1 then vdsuppnum2=2;


	***********************************************
	Vitamin d from diet and supp
		*Run after obtain tertiles
	***********************************************;

	/*High_VitD_supp=.;
		if High_VitD=0 and anysupp=0 then High_VitD_supp=0;
		if High_VitD=1 and anysupp=0 then High_VitD_supp=1;
		if High_VitD=0 and anysupp=1 then High_VitD_supp=2;
		if High_VitD=1 and anysupp=1 then High_VitD_supp=3;*/


	***********************************************
	Other vars
	***********************************************;

	case=.;
	*Recoding case to 0,1 format - could use format later;
		if c_cc=1 then case=1;
		if c_cc=2 then case=0;

	*indicator vars for study center;
	ark=.;  if locid=10 then ark=1; else ark=0;
	cal=.;  if locid=11 then cal=1; else cal=0;
	iowa=.; if locid=12 then iowa=1; else iowa=0;
	mass=.; if locid=13 then mass=1; else mass=0;
	nj=.;   if locid=14 then nj=1; else nj=0;
	ny=.;   if locid=15 then ny=1; else ny=0;
	tex=.;  if locid=16 then tex=1; else tex=0;
	cdc=.;  if locid=17 then cdc=1; else cdc=0;
	nc=.;   if locid=18 then nc=1; else nc=0;
	ut=.;   if locid=19 then ut=1; else ut=0;

	cdate=catx ('/',put(month(C_concep_std),z2.),put(day(C_concep_std),z2.));
		***for the one missing women with a calc bday of 11/21/2000
			using wheel estimated date of conception is either february 28 or march 1
			using online calculator date of conception is february 29
			either way that is a winter conception date so will code as such;
			*for uv need to assign a month, since more evidence of feb dates than march, assigning feb 2000;

	****exclusion criteria
		-missing more than 1 ffq
		-kcal less than 500
		-kcal greater than 5000;

	missmorethan1=.;
		if missing=0 or missing=1 then missmorethan1=0;
		else missmorethan1=1;

	kcal_ls500=.;
		if ENERC_KCAL < 500 and ENERC_KCAL ne . then kcal_ls500=1; 
		if ENERC_KCAL >= 500 and ENERC_KCAL ne . then kcal_ls500=0; 

	kcal_gr5000=.;
		if ENERC_KCAL > 5000 and ENERC_KCAL ne . then kcal_gr5000=1; 
		if ENERC_KCAL <= 5000 and ENERC_KCAL ne . then kcal_gr5000=0; 

	missingkcal=.;
		if ENERC_KCAL=. then missingkcal=1; else missingkcal=0;
		
	kcal_ex=.;
		if kcal_ls500=1 or  kcal_gr5000=1 then kcal_ex=1; 
			else kcal_ex=0;
	north=.;
		if locid in (10,11,16:19) then north=0;
		if locid in (12:15) then north=1;

	newbmi=.;
		if C_bminih=1 then newbmi=1;
		if C_bminih=2 then newbmi=2;
		if C_bminih=3 then newbmi=3;
		if C_bminih=4 then newbmi=4;
		if C_bminih in (999,888) then newbmi=.;

	recvd=.;
		if vitd >= 600 then recvd=1;
		if vitd <600 then recvd=0;

	lowuv=.;
		if 	UV_index_cat=0 then lowuv=1;
		else lowuv=0;

	lowdiet=.;
		if Vit_D_tert=0 then lowdiet=1;
		if Vit_D_tert=1 then lowdiet=0;
		if Vit_D_tert=2 then lowdiet=0;
		if Vit_D_tert=. then lowdiet=.;

	sconcep=.;
		*summer;
		if "20Jun1997"d <= C_concep_std <= "21Sep1997"d then sconcep=0;
		if "20Jun1998"d <= C_concep_std <= "21Sep1998"d then sconcep=0;
		if "20Jun1999"d <= C_concep_std <= "21Sep1999"d then sconcep=0;
		if "20Jun2000"d <= C_concep_std <= "21Sep2000"d then sconcep=0;
		if "20Jun2001"d <= C_concep_std <= "21Sep2001"d then sconcep=0;
		if "20Jun2002"d <= C_concep_std <= "21Sep2002"d then sconcep=0;
		if "20Jun2003"d <= C_concep_std <= "21Sep2003"d then sconcep=0;
		if "20Jun2004"d <= C_concep_std <= "21Sep2004"d then sconcep=0;
		if "20Jun2005"d <= C_concep_std <= "21Sep2005"d then sconcep=0;
		if "20Jun2006"d <= C_concep_std <= "21Sep2006"d then sconcep=0;
		if "20Jun2007"d <= C_concep_std <= "21Sep2007"d then sconcep=0;
		if "20Jun2008"d <= C_concep_std <= "21Sep2008"d then sconcep=0;
		if "20Jun2009"d <= C_concep_std <= "21Sep2009"d then sconcep=0;
		if "20Jun2010"d <= C_concep_std <= "21Sep2010"d then sconcep=0;
		
		*spring;
		if "20Mar1997"d <= C_concep_std <= "19Jun1997"d then sconcep=1;
		if "20Mar1998"d <= C_concep_std <= "19Jun1998"d then sconcep=1;
		if "20Mar1999"d <= C_concep_std <= "19Jun1999"d then sconcep=1;
		if "20Mar2000"d <= C_concep_std <= "19Jun2000"d then sconcep=1;
		if "20Mar2001"d <= C_concep_std <= "19Jun2001"d then sconcep=1;
		if "20Mar2002"d <= C_concep_std <= "19Jun2002"d then sconcep=1;
		if "20Mar2003"d <= C_concep_std <= "19Jun2003"d then sconcep=1;
		if "20Mar2004"d <= C_concep_std <= "19Jun2004"d then sconcep=1;
		if "20Mar2005"d <= C_concep_std <= "19Jun2005"d then sconcep=1;
		if "20Mar2006"d <= C_concep_std <= "19Jun2006"d then sconcep=1;
		if "20Mar2007"d <= C_concep_std <= "19Jun2007"d then sconcep=1;
		if "20Mar2008"d <= C_concep_std <= "19Jun2008"d then sconcep=1;
		if "20Mar2009"d <= C_concep_std <= "19Jun2009"d then sconcep=1;
		if "20Mar2010"d <= C_concep_std <= "19Jun2010"d then sconcep=1;
		if "20Mar2011"d <= C_concep_std <= "19Jun2011"d then sconcep=1;

		*fall;
		if "22Sep1997"d <= C_concep_std <= "20Dec1997"d then sconcep=2;
		if "22Sep1998"d <= C_concep_std <= "20Dec1998"d then sconcep=2;
		if "22Sep1999"d <= C_concep_std <= "20Dec1999"d then sconcep=2;
		if "22Sep2000"d <= C_concep_std <= "20Dec2000"d then sconcep=2;
		if "22Sep2001"d <= C_concep_std <= "20Dec2001"d then sconcep=2;
		if "22Sep2002"d <= C_concep_std <= "20Dec2002"d then sconcep=2;
		if "22Sep2003"d <= C_concep_std <= "20Dec2003"d then sconcep=2;
		if "22Sep2004"d <= C_concep_std <= "20Dec2004"d then sconcep=2;
		if "22Sep2005"d <= C_concep_std <= "20Dec2005"d then sconcep=2;
		if "22Sep2006"d <= C_concep_std <= "20Dec2006"d then sconcep=2;
		if "22Sep2007"d <= C_concep_std <= "20Dec2007"d then sconcep=2;
		if "22Sep2008"d <= C_concep_std <= "20Dec2008"d then sconcep=2;
		if "22Sep2009"d <= C_concep_std <= "20Dec2009"d then sconcep=2;
		if "22Sep2010"d <= C_concep_std <= "20Dec2010"d then sconcep=2;

		*winter;
		if "21Dec1996"d <= C_concep_std <= "19Mar1997"d then sconcep=3;
		if "21Dec1997"d <= C_concep_std <= "19Mar1998"d then sconcep=3;
		if "21Dec1998"d <= C_concep_std <= "19Mar1999"d then sconcep=3;
		if "21Dec1999"d <= C_concep_std <= "19Mar2000"d then sconcep=3;
		if "21Dec2000"d <= C_concep_std <= "19Mar2001"d then sconcep=3;
		if "21Dec2001"d <= C_concep_std <= "19Mar2002"d then sconcep=3;
		if "21Dec2002"d <= C_concep_std <= "19Mar2003"d then sconcep=3;
		if "21Dec2003"d <= C_concep_std <= "19Mar2004"d then sconcep=3;
		if "21Dec2004"d <= C_concep_std <= "19Mar2005"d then sconcep=3;
		if "21Dec2005"d <= C_concep_std <= "19Mar2006"d then sconcep=3;
		if "21Dec2006"d <= C_concep_std <= "19Mar2007"d then sconcep=3;
		if "21Dec2007"d <= C_concep_std <= "19Mar2008"d then sconcep=3;
		if "21Dec2008"d <= C_concep_std <= "19Mar2009"d then sconcep=3;
		if "21Dec2009"d <= C_concep_std <= "19Mar2010"d then sconcep=3;
		if "21Dec2010"d <= C_concep_std <= "19Mar2011"d then sconcep=3;
		if C_concep_std=. then sconcep=3; *missing women;

	fwconcep=.;
		if sconcep=0 or sconcep=1 then fwconcep=0;
		if sconcep=2 or sconcep=3 then fwconcep=1;
****************************************************;
	newseasons=.;
		if sconcep=1 or sconcep=3 then newseasons=0; *spring/winter;
		if sconcep=0 or sconcep=2 then newseasons=1; *fall/summer;
	run;

data rep.final3;
		set rep.final4;
		*this is code from Olivia that makes the proper exclusions so that I obtain the appropriate distributions for analyses;
		where missmorethan1=0 and missingkcal=0 and kcal_ex=0;
	run;

	
/**********************************************************************
*                                                					  *
*                           DESCRIPTIVE STATISTICS                    *
*                                                                     *
***********************************************************************/

*table 1. distribution of covariates by case control status;
%macro table1 (var);
proc freq data=rep.final4;
		table (newagecat newrace c_bminih newedu C_smoke c_alcohol 
				parity anypmv north lowuv fwconcep lowdiet)*&var/norow nopercent missing;
		run; *WS NOTE: ANYPMV = "periconceptional multivitamin or prenatal vitamin use";
%mend table1;

%table1(case);

*table 2. distribution of covariates in controls;
%macro table2 (var);
proc freq data=rep.final4;
		table (locid newagecat newrace c_bminih newedu C_smoke c_alcohol 
				parity anypmv)*&var/norow nopercent missing;
				where case=0;
		run;
%mend table2;

%table2 (lowuv);
%table2 (fwconcep);
%table2 (lowdiet);
%table2 (newseasons);

* Birth defects with fewer than 500 isolated cases to be dropped; 
*Restricting to isolated cases;
data rep.bds;
set rep.final3;

*Isolated neural tube defects;
if ntdsummary=1 and ntd_any=1 then isolated_anyNTD=1; *isolated any NTDs;
		else isolated_anyNTD=.;
		if ntd_any=0 then isolated_anyNTD=0;
if ntdsummary=1 and anencephaly=1 then isolated_anen=1; *isolated anencephaly;
		else isolated_anen=.;
		if anencephaly=0 then isolated_anen=0;
if ntdsummary=1 and spinabifida=1 then isolated_spina=1; *isolated spina bifida;
		else isolated_spina=.;
		if spinabifida=0 then isolated_spina=0;
if hydrosummary=1 and hydroceph=1 then isolated_hydro=1; *isolated hydrocephaly;
	else isolated_hydro=.;
	if hydroceph=0 then isolated_hydro=0;

*Isolated gastrointestinal and genitourinary; 
if esophsummary=1 and esophageal = 1 then isolated_esoph=1; *isolated esophageal;
		else isolated_esoph=.;
		if esophageal=0 then isolated_esoph=0;
if anorectalsummary=1 and anorectal=1 then isolated_anorectal=1; *isolated anorectal;
		else isolated_anorectal=.;
		if anorectal=0 then isolated_anorectal=0;
if hyposummary=1 and hypospadias=1 then isolated_hypo=1; *isolated hypospadias;
		else isolated_hypo=.;
if hypospadias=0 then isolated_hypo=0;

*Isolated heart defects;
if heartsummary=1 and anyheart=1 then isolated_anyheart=1; *isolated any heart defects;
		else isolated_anyheart=.;
		if anyheart=0 then isolated_anyheart=0;
if heartsummary=1 and conotruncal=1 then isolated_conotruncal=1; *isolated conotruncal defects;
		else isolated_conotruncal=.;
		if conotruncal=0 then isolated_conotruncal=0;
if heartsummary=1 and septal=1 then isolated_septal=1; *isolated septal defects;
		else isolated_septal=.;
		if septal=0 then isolated_septal=0;
if heartsummary=1 and rvoto=1 then isolated_rvoto=1; *isolated RVOTO defects;
		else isolated_rvoto=.;
		if rvoto=0 then isolated_rvoto=0;
if heartsummary=1 and lvoto=1 then isolated_lvoto=1; *isolated LVOTO defects;
		else isolated_lvoto=.;
		if lvoto=0 then isolated_lvoto=0;

*Isolated musculoskeletal;
if limbsummary=1 and limb=1 then isolated_limb=1; *isolated limb deficiencies;
		else isolated_limb=.;
		if limb=0 then isolated_limb=0;
if diaphragmsummary=1 and diaphragm=1 then isolated_diaph=1; *isolated diaphragmatic hernia;
		else isolated_diaph=.;
		if diaphragm=0 then isolated_diaph=0;
if gastrsummary=1 and gastroschisis=1 then isolated_gastro=1; *isolated gastroschisis;
		else isolated_gastro=.;
	    if gastroschisis=0 then isolated_gastro=0;

*Isolated craniofacial;
if earsummary=1 and ear=1 then isolated_ear=1;
		else isolated_ear=.;
		if ear=0 then isolated_ear=0;
if craniosynsummary=1 and craniosyn=1 then isolated_craniosyn=1; *isolated craniosynostosis;
		else isolated_craniosyn=.;
		if craniosyn=0 then isolated_craniosyn=0;
if cleftsummary=1 and clpwwcp=1 then isolated_clpwwcp=1; *isolated cleft with and without palate;
		else isolated_clpwwcp=.;
 		if clpwwcp=0 then isolated_clpwwcp=0;
if cleftsummary=1 and cleftpalate=1 then isolated_clp=1; *isolated cleft palate;
		else isolated_clp=.;
		if cleftpalate=0 then isolated_clp=0;
run;
